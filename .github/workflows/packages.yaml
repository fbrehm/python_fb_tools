---

name: "Building OS packages."

on:
  push:
    branches-ignore:
      - /^dev-.*$/
      - /^dev\/.*$/
      - /^hf.*$/

env:
  DEBFULLNAME: 'Frank Brehm'
  DEBEMAIL: 'frank@brehm-online.com'

jobs:

  test_python_3-6:
    runs-on: ubuntu-latest
    name: Testing with Python 3.6
    container: python:3.6
    steps:
      - uses: actions/checkout@v2
      - uses: ./.github/actions/prepare-debian-container
      - uses: ./.github/actions/install-pip-modules
      - uses: ./.github/actions/python-test

  test_python_3-7:
    runs-on: ubuntu-latest
    name: Testing with Python 3.7
    container: python:3.7
    steps:
      - uses: actions/checkout@v2
      - uses: ./.github/actions/prepare-debian-container
      - uses: ./.github/actions/install-pip-modules
      - uses: ./.github/actions/python-test

  test_python_3-8:
    runs-on: ubuntu-latest
    name: Testing with Python 3.8
    container: python:3.8
    steps:
      - uses: actions/checkout@v2
      - uses: ./.github/actions/prepare-debian-container
      - uses: ./.github/actions/install-pip-modules
      - uses: ./.github/actions/python-test

  test_python_3-9:
    runs-on: ubuntu-latest
    name: Testing with Python 3.9
    container: python:3.9
    steps:
      - uses: actions/checkout@v2
      - uses: ./.github/actions/prepare-debian-container
      - uses: ./.github/actions/install-pip-modules
      - uses: ./.github/actions/python-test

  linter:
    runs-on: ubuntu-latest
    name: Executing Linters
    container: python:3.9
    env:
      FLAKE8_MAX_LINE_LENGTH: 99
      FLAKE8_MAX_COMPLEXITY: 20
      FLAKE8_IGNORE_ERRORS: 'E226,E302,E41,E402'
    needs:
      - test_python_3-6
      - test_python_3-7
      - test_python_3-8
      - test_python_3-9
    steps:
      - uses: actions/checkout@v2
      - uses: ./.github/actions/prepare-debian-container
      - uses: ./.github/actions/install-pip-modules
      - name: Install shellcheck and yamllint
        run: apt install --yes shellcheck yamllint
      - name: Install flake8 and pylint
        run: |
          pip install --upgrade --upgrade-strategy eager flake8 pylint
          pip list --format columns
      - name: Execute Flake 8
        run: >
          flake8 --max-line-length=$FLAKE8_MAX_LINE_LENGTH
                 --max-complexity=$FLAKE8_MAX_COMPLEXITY
                 --ignore=$FLAKE8_IGNORE_ERRORS bin lib
      - name: Execute Shellcheck
        run: >
          shellcheck -x compile-xlate-msgs.sh
                        test.py-*.sh
                        test.rc
                        test/call_script.sh
                        test/call_sleep.sh
                        update-env.sh
                        xtract-xlate-msgs.sh
      - name: Execute Yamllint
        run: yamllint -c yamllint.yaml .gitlab-ci.yml

  build_debian_sources:
    runs-on: ubuntu-latest
    name: Building Debian Source Packages
    container: debian:bullseye
    env:
      VERSION_PREFIX: 'deb11'
      DISTRIBUTOR: 'Debian'
      OS_RELEASE: '11'
      OS_CODENAME: 'bullseye'
    needs:
      - linter
    steps:
      - uses: actions/checkout@v2
      - uses: ./.github/actions/prepare-debian-container
      - uses: ./.github/actions/debian-install-buildenv
      - name: Preparing Update Changelog
        run: |
          export PKG_VERSION=$( ./get-debian-version )
          export PKG_RELEASE=$( ./get-debian-release )
          export BUILD_VERSION="${PKG_VERSION}~${VERSION_PREFIX}"
          BUILDER="${DEBFULLNAME} <${DEBEMAIL}>"
          echo "Version to build: ${BUILD_VERSION} - Builder: ${BUILDER}"
      - name: Updating Changelog
        run: >
          debchange --newversion "${BUILD_VERSION}" --force-bad-version
                    --distribution "${OS_CODENAME}"
                    --urgency medium
                    "Build for ${DISTRIBUTOR} ${OS_RELEASE} - ${OS_CODENAME}"
      - name: Debian build
        run: |
          head -n 5 debian/changelog
          cp -v debian/control-py3only debian/control
          cp -v debian/rules-py3only debian/rules
          echo '12' > debian/compat
          echo "y" | debuild -b -i -us -uc
          echo "${PKG_VERSION}-${PKG_RELEASE}" > .debian-version
          ls -lA --color=always ..
          mkdir -pv debian/pkgs/src
          mv -vi ../*.dsc ../*.tar.* ../*.build* ../*.changes debian/pkgs/src
          ls -lA --color=always debian/pkgs/*/*



# vim: et tabstop=2 expandtab shiftwidth=2 softtabstop=2 list
