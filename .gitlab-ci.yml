---

stages:
  - test
  - linter
  - build
  - deploy

variables:
  FLAKE8_MAX_LINE_LENGTH: 99
  FLAKE8_MAX_COMPLEXITY: 20
  FLAKE8_IGNORE_ERRORS: 'E226,E302,E41,E402'
  YUM_REPO_GPG_PASSWD: 'secret'
  YUM_REPO_HOST: 'rpm-repo.pixelpark.com'
  YUM_REPO_USER: 'rpm-repo'
  YUM_REPO_DIR: '/www/sites/rpm-repo.pixelpark.com/docs/x86_64'
  YUM_REPO_ADDSIGN_SCRIPT: '/home/rpm-repo/rpm-addsign-wrapper.expect'

.template_docker_job: &docker_job_definition
  before_script:
    - locale -a
    - apt update && apt install --yes sudo locales gettext
    - if test -f /etc/locale.gen; then echo "/etc/locale.gen:"; grep -P -v '^\s*(#.*)?$' /etc/locale.gen || true; echo "<-- EOF"; fi
    - if grep 'en_US.UTF-8' /etc/locale.gen; then sed -i -e 's/# en_US.UTF-8 UTF-8/en_US.UTF-8 UTF-8/' /etc/locale.gen ; else echo 'en_US.UTF-8 UTF-8' >> /etc/locale.gen; fi
    - if grep 'de_DE.UTF-8' /etc/locale.gen; then sed -i -e 's/# de_DE.UTF-8 UTF-8/de_DE.UTF-8 UTF-8/' /etc/locale.gen ; else echo 'de_DE.UTF-8 UTF-8' >> /etc/locale.gen; fi
    - locale-gen
    - locale -a
    - pip install --upgrade pip
    - pip install -r requirements.txt --upgrade --upgrade-strategy eager

test Python 2.7:
  <<: *docker_job_definition
  stage: test
  image: python:2.7
  script:
    - pip install --upgrade --upgrade-strategy eager ipaddress
    - pip install --upgrade --upgrade-strategy eager pytest
    - pytest --verbose
  tags:
    - docker
  except:
    - /^dev-.*$/
    - /^dev\/.*$/
    - /^hf.*$/

test Python 3.5:
  <<: *docker_job_definition
  stage: test
  image: python:3.5
  script:
    - pip install --upgrade --upgrade-strategy eager pytest
    - pytest --verbose
  tags:
    - docker
  except:
    - /^dev-.*$/
    - /^dev\/.*$/
    - /^hf.*$/

test Python 3.6:
  <<: *docker_job_definition
  stage: test
  image: python:3.6
  script:
    - pip install --upgrade --upgrade-strategy eager pytest
    - pytest --verbose
  tags:
    - docker
  except:
    - /^dev-.*$/
    - /^dev\/.*$/
    - /^hf.*$/

test Python 3.7:
  <<: *docker_job_definition
  stage: test
  image: python:3.7
  script:
    - pip install --upgrade --upgrade-strategy eager pytest
    - pytest --verbose
  tags:
    - docker
  except:
    - /^dev-.*$/
    - /^dev\/.*$/
    - /^hf.*$/

Linter:
  <<: *docker_job_definition
  stage: linter
  image: python:3.7
  script:
    - pip install --upgrade --upgrade-strategy eager flake8 pylint
    - flake8 --max-line-length=$FLAKE8_MAX_LINE_LENGTH --max-complexity=$FLAKE8_MAX_COMPLEXITY --ignore=$FLAKE8_IGNORE_ERRORS bin lib
  tags:
    - docker
  except:
    - /^dev-.*$/
    - /^dev\/.*$/
    - /^hf.*$/

build Python 2.7:
  <<: *docker_job_definition
  stage: build
  image: python:2.7
  script:
    - python setup.py bdist
  tags:
    - docker
  except:
    - /^dev-.*$/
    - /^dev\/.*$/
    - /^hf.*$/

build Python 3.5:
  <<: *docker_job_definition
  stage: build
  image: python:3.5
  script:
    - python setup.py bdist
  tags:
    - docker
  except:
    - /^dev-.*$/
    - /^dev\/.*$/
    - /^hf.*$/

build Python 3.6:
  <<: *docker_job_definition
  stage: build
  image: python:3.6
  script:
    - python setup.py bdist
  tags:
    - docker
  except:
    - /^dev-.*$/
    - /^dev\/.*$/
    - /^hf.*$/

build Python 3.7:
  <<: *docker_job_definition
  stage: build
  image: python:3.7
  script:
    - python setup.py bdist
  tags:
    - docker
  except:
    - /^dev-.*$/
    - /^dev\/.*$/
    - /^hf.*$/

RPM package OEL7:
  stage: deploy
  tags:
    - deploy
  script:
    - hostname -f
    - whoami
    - pwd
    - mkdir -pv rpmdir
    - mkdir -pv rpmdir/SOURCES
    - 'export ODIR=$(pwd)'
    - 'export ROOT_OBJECTS=$( ls -A1 | egrep -vw ".git|rpmdir" )'
    - 'export PKG_VERSION=$( cat debian/changelog | head -n 1 | sed -e "s/^[^(]*(//" -e "s/).*//" )'
    - 'echo "Version to build: $PKG_VERSION"'
    - 'mkdir -pv rpmdir/SOURCES/python_fb_tools-$PKG_VERSION'
    - 'tar cf - $ROOT_OBJECTS | (cd rpmdir/SOURCES/python_fb_tools-$PKG_VERSION; tar xf -)'
    - 'cd rpmdir/SOURCES && tar cfzv fb_tools.$PKG_VERSION.tar.gz python_fb_tools-$PKG_VERSION; cd $ODIR'
    - 'cat specs/fb_tools.spec.template | sed -e "s/@@@Version@@@/$PKG_VERSION/gi" > specs/fb_tools.spec'
    - 'rpmbuild -ba --nocheck --verbose --define "_topdir $(pwd)/rpmdir" --define "version=$PKG_VERSION" specs/fb_tools.spec'
    - tree -aQpugs rpmdir/*RPMS || true
    - ls -lA rpmdir/RPMS/*/* rpmdir/SRPMS/*
    - 'for f in rpmdir/RPMS/*/*.rpm; do b=$( basename $f ); echo "Checking $b ..."; ssh -o StrictHostKeyChecking=no ${YUM_REPO_USER}@${YUM_REPO_HOST} "cd ${YUM_REPO_DIR}/; if test -f $b; then echo \"Package $b is already existing.\"; exit 5; fi"; done'
    - 'scp -p -o StrictHostKeyChecking=no rpmdir/RPMS/*/*.rpm ${YUM_REPO_USER}@${YUM_REPO_HOST}:${YUM_REPO_DIR}/'
    - 'for f in rpmdir/RPMS/*/*.rpm; do b=$( basename $f ); echo "Signing $b ..."; echo "${YUM_REPO_GPG_PASSWD}" | ssh -o StrictHostKeyChecking=no ${YUM_REPO_USER}@${YUM_REPO_HOST} "cd ${YUM_REPO_DIR}/ && ${YUM_REPO_ADDSIGN_SCRIPT} $b"; done'
    - 'ssh -o StrictHostKeyChecking=no ${YUM_REPO_USER}@${YUM_REPO_HOST} "cd ${YUM_REPO_DIR}/ && createrepo --update ."'
  after_script:
    - rm -r rpmdir
  environment:
    name: production
  only:
    - master

